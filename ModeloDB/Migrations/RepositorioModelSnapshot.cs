// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModeloDB;

namespace ModeloDB.Migrations
{
    [DbContext(typeof(Repositorio))]
    partial class RepositorioModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Modelo.Entidades.Aportaciones", b =>
                {
                    b.Property<int>("AportacionesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("AporteAfiliado")
                        .HasColumnType("real");

                    b.Property<float>("AporteEmpresa")
                        .HasColumnType("real");

                    b.Property<string>("EstadoAportacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAportacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RucEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Salario")
                        .HasColumnType("real");

                    b.Property<int>("SolicitanteId")
                        .HasColumnType("int");

                    b.HasKey("AportacionesId");

                    b.HasIndex("SolicitanteId");

                    b.ToTable("Aportaciones");
                });

            modelBuilder.Entity("Modelo.Entidades.FondosCesantia", b =>
                {
                    b.Property<int>("FondosCesantiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("AportacionFC")
                        .HasColumnType("real");

                    b.Property<int>("AportacionesId")
                        .HasColumnType("int");

                    b.Property<float>("PorcentajeFC")
                        .HasColumnType("real");

                    b.HasKey("FondosCesantiaId");

                    b.HasIndex("AportacionesId");

                    b.ToTable("FondosCesantias");
                });

            modelBuilder.Entity("Modelo.Entidades.FondosReserva", b =>
                {
                    b.Property<int>("FondosReservaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("AportacionFR")
                        .HasColumnType("real");

                    b.Property<int?>("AportacionesId")
                        .HasColumnType("int");

                    b.Property<int>("ApotacionesId")
                        .HasColumnType("int");

                    b.Property<float>("PorcentajeFR")
                        .HasColumnType("real");

                    b.HasKey("FondosReservaId");

                    b.HasIndex("AportacionesId");

                    b.ToTable("FondosReservas");
                });

            modelBuilder.Entity("Modelo.Entidades.Garantias", b =>
                {
                    b.Property<int>("GarantiasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AportacionesId")
                        .HasColumnType("int");

                    b.Property<int>("CantidadAportaciones")
                        .HasColumnType("int");

                    b.Property<int?>("FondosCesantiaId")
                        .HasColumnType("int");

                    b.Property<int?>("FondosReservaId")
                        .HasColumnType("int");

                    b.Property<float>("TotalGarantias")
                        .HasColumnType("real");

                    b.HasKey("GarantiasId");

                    b.HasIndex("AportacionesId");

                    b.HasIndex("FondosCesantiaId");

                    b.HasIndex("FondosReservaId");

                    b.ToTable("Garantias");
                });

            modelBuilder.Entity("Modelo.Entidades.Prestamo", b =>
                {
                    b.Property<int>("PrestamoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("CantidadAprobada")
                        .HasColumnType("real");

                    b.Property<float>("CuotaMensual")
                        .HasColumnType("real");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<float>("Interes")
                        .HasColumnType("real");

                    b.Property<int>("MesesPlazo")
                        .HasColumnType("int");

                    b.Property<float>("MontoTotalPagar")
                        .HasColumnType("real");

                    b.Property<int>("SolicitanteId")
                        .HasColumnType("int");

                    b.HasKey("PrestamoId");

                    b.HasIndex("SolicitanteId");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("Modelo.Entidades.Solicitante", b =>
                {
                    b.Property<int>("SolicitanteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("SolicitanteId");

                    b.ToTable("Solicitantes");
                });

            modelBuilder.Entity("Modelo.Entidades.Aportaciones", b =>
                {
                    b.HasOne("Modelo.Entidades.Solicitante", "Solicitante")
                        .WithMany("ListaAportaciones")
                        .HasForeignKey("SolicitanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Solicitante");
                });

            modelBuilder.Entity("Modelo.Entidades.FondosCesantia", b =>
                {
                    b.HasOne("Modelo.Entidades.Aportaciones", "Aportaciones")
                        .WithMany()
                        .HasForeignKey("AportacionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aportaciones");
                });

            modelBuilder.Entity("Modelo.Entidades.FondosReserva", b =>
                {
                    b.HasOne("Modelo.Entidades.Aportaciones", "Aportaciones")
                        .WithMany()
                        .HasForeignKey("AportacionesId");

                    b.Navigation("Aportaciones");
                });

            modelBuilder.Entity("Modelo.Entidades.Garantias", b =>
                {
                    b.HasOne("Modelo.Entidades.Aportaciones", "Aportaciones")
                        .WithMany()
                        .HasForeignKey("AportacionesId");

                    b.HasOne("Modelo.Entidades.FondosCesantia", "fondosCesantia")
                        .WithMany()
                        .HasForeignKey("FondosCesantiaId");

                    b.HasOne("Modelo.Entidades.FondosReserva", "FondosReserva")
                        .WithMany()
                        .HasForeignKey("FondosReservaId");

                    b.Navigation("Aportaciones");

                    b.Navigation("fondosCesantia");

                    b.Navigation("FondosReserva");
                });

            modelBuilder.Entity("Modelo.Entidades.Prestamo", b =>
                {
                    b.HasOne("Modelo.Entidades.Solicitante", "Solicitante")
                        .WithMany()
                        .HasForeignKey("SolicitanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Solicitante");
                });

            modelBuilder.Entity("Modelo.Entidades.Solicitante", b =>
                {
                    b.Navigation("ListaAportaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
